package com.wuxianedu.service;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import com.wuxianedu.domain.Exam;
import com.wuxianedu.domain.ExamBean;
import com.wuxianedu.domain.ExamCondition;
import com.wuxianedu.domain.Grade;
import com.wuxianedu.domain.Paper;
import com.wuxianedu.exception.ExamException;
import com.wuxianedu.exception.SystemException;
import com.wuxianedu.mapper.ExamMapper;

@Service
public class ExamService {
	
	@Resource
	private ExamMapper examMapper;
	
	// 查询所有考试
	public List<Exam> findAllExam() throws ExamException, SystemException{
		List<Exam> exams = null;
		try {
			exams = examMapper.findAllExam();
		} catch (Exception e) {
			throw new SystemException(e);
		}
		if(exams == null){
			throw new ExamException("没有考试");
		}
		return exams;
	}
	
	// 根据条件查询考试
	public List<Exam> findExamByCondition(ExamCondition examCondition) throws ExamException, SystemException{
		List<Exam> exams = null;
		try {
			exams = examMapper.findExamByCondition(examCondition);
		} catch (Exception e) {
			throw new SystemException(e);
		}
		if(exams == null){
			throw new ExamException("没有该类型考试");
		}
		return exams;
	}
	
	// 根据班级查询考试
	public List<Exam> findExamByGrade(int cid) throws SystemException, ExamException{
		List<Exam> exams = null;
		try {
			exams = examMapper.findExamByGrade(cid);
		} catch (Exception e) {
			throw new SystemException(e);
		}
		if(exams == null){
			throw new ExamException("暂无考试");
		}
		return exams;
	}
	
	// 根据考试ID 查询考试
	public Exam findExamByEid(Exam exam) throws SystemException, ExamException{
		Exam ex = null;
		try {
			ex = examMapper.findExamByEid(exam);
		} catch (Exception e) {
			throw new SystemException(e);
		}
		if(ex == null){
			throw new ExamException("没有找到该考试");
		}
		return ex;
	}
	
	// 创建考试
	@Transactional(propagation=Propagation.REQUIRED, rollbackFor={SystemException.class})
	public void createExam(ExamBean examBean) throws SystemException, ExamException{
		Exam exam = new Exam();
		Paper paper = new Paper();
		Grade grade = new Grade();
		paper.setPid(examBean.getPid());
		grade.setCid(examBean.getCid());
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm");
		Date startTime = null;
		Date endTime = null;
		try {
			startTime = sdf.parse(examBean.getStartTime());
			endTime = sdf.parse(examBean.getEndTime());
		} catch (ParseException e1) {
			throw new ExamException("时间不符合规范");
		}
		exam.setExamName(examBean.getExamName());
		exam.setGrade(grade);
		exam.setPaper(paper);
		exam.setStartTime(startTime);
		exam.setEndTime(endTime);
		try {
			examMapper.createExam(exam);
		} catch (Exception e) {
			throw new SystemException(e);
		}
	}
	
	// 修改考试
	@Transactional(propagation=Propagation.REQUIRED, rollbackFor={SystemException.class})
	public void updateExam(Exam exam) throws SystemException{
		try {
			examMapper.updateExam(exam);
		} catch (Exception e) {
			throw new SystemException(e);
		}
	}
}
