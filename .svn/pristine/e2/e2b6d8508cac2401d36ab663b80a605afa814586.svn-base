package com.wuxianedu.service;

import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import com.wuxianedu.domain.Exam;
import com.wuxianedu.domain.ExamCondition;
import com.wuxianedu.exception.ExamException;
import com.wuxianedu.exception.SystemException;
import com.wuxianedu.mapper.ExamMapper;

@Service
public class ExamService {
	
	@Resource
	private ExamMapper examMapper;
	
	// 查询所有考试
	public List<Exam> findAllExam() throws ExamException, SystemException{
		List<Exam> exams = null;
		try {
			exams = examMapper.findAllExam();
		} catch (Exception e) {
			throw new SystemException(e);
		}
		if(exams == null){
			throw new ExamException("没有考试");
		}
		return exams;
	}
	
	// 根据条件查询考试
	public List<Exam> findExamByCondition(ExamCondition examCondition) throws ExamException, SystemException{
		List<Exam> exams = null;
		try {
			exams = examMapper.findExamByCondition(examCondition);
		} catch (Exception e) {
			throw new SystemException(e);
		}
		if(exams == null){
			throw new ExamException("没有该类型考试");
		}
		return exams;
	}
	
	// 根据班级查询考试
	public List<Exam> findExamByGrade(int cid) throws SystemException, ExamException{
		List<Exam> exams = null;
		try {
			exams = examMapper.findExamByGrade(cid);
		} catch (Exception e) {
			throw new SystemException(e);
		}
		if(exams == null){
			throw new ExamException("暂无考试");
		}
		return exams;
	}
	
	// 创建考试
	@Transactional(propagation=Propagation.REQUIRED, rollbackFor={SystemException.class})
	public void createExam(Exam exam) throws SystemException{
		try {
			examMapper.createExam(exam);
		} catch (Exception e) {
			throw new SystemException(e);
		}
	}
	
	// 修改考试
	@Transactional(propagation=Propagation.REQUIRED, rollbackFor={SystemException.class})
	public void updateExam(Exam exam) throws SystemException{
		try {
			examMapper.updateExam(exam);
		} catch (Exception e) {
			throw new SystemException(e);
		}
	}
	
	// 修改考试状态
	@Transactional(propagation=Propagation.REQUIRED, rollbackFor={SystemException.class})
	public void updateExamForStatus(Exam exam) throws SystemException{
		try {
			examMapper.updateExamForStatus(exam);
		} catch (Exception e) {
			throw new SystemException(e);
		}
	}
}
